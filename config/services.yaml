# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    oauth_user_provider.class: App\Security\Core\User\FOSUBUserProvider

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

        # ...
    admin.banner:
        class: App\Admin\Display\BannerAdmin
        arguments: [~, App\Entity\Banner, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Display, label: Banner }
        public: true

    admin.user:
        class: App\Admin\Display\UserAdmin
        arguments: [~, App\Entity\User, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: 'Users & Roles', label: User }
        public: true

    oauth_aware.user_provider.service:
        class: "%oauth_user_provider.class%"
        #this is the place where the properties are passed to the UserProvider - see config.yml
        arguments: ['@fos_user.user_manager', { facebook: facebookId }]

    App\EventListener\SecurityListener:
        arguments: ['@router', '@security.authorization_checker', '@event_dispatcher']
        tags:
            - { name: 'kernel.event_listener', event: 'security.interactive_login' }

