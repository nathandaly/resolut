security:
    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        fos_userbundle:
            id: fos_user.user_provider.username_email

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_token_generator: security.csrf.token_manager
                login_path: /login
                check_path: /login_check
            oauth:
                resource_owners:
                    facebook: "/login/check-facebook"
                login_path: /login
                failure_path: /login

                oauth_user_provider:
                    #this is my custom user provider, created from FOSUBUserProvider - will manage the
                    #automatic user registration on your site, with data from the provider (facebook. google, etc.)
                    service: oauth_aware.user_provider.service
            logout: true
            anonymous: true

        login:
            pattern:  ^/login$
            security: false

            remember_me:
                secret: "%env(APP_SECRET)%"
                lifetime: 31536000 # 365 days in seconds
                path: /
                domain: ~ # Defaults to the current domain from $_SERVER
        admin:
            pattern: ^/admin/
            context: user
            form_login:
                provider: fos_userbundle
                login_path: /admin/login
                check_path: /admin/login_check
                use_forward: false
                failure_path: /admin/login
                default_target_path: /admin
            logout:
                path: /admin/logout
                target: /admin/login
                invalidate_session: true
            anonymous: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: ROLE_ADMIN }
        - { path: ^/admin/, role: ROLE_SUPER_ADMIN }
        - { path: ^/admin/, role: ROLE_ALLOWED_TO_SWITCH }
